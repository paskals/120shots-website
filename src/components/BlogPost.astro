---
import { type CollectionEntry } from "astro:content";

type Props = {
  post: CollectionEntry<"posts">; //TODO: not specific to posts
  url: string;
};

const { post, url } = Astro.props;
const { title, description, pubDate } = post.data;
const image = post.data.image || null;
import { Image } from "astro:assets";
const publishedDate = pubDate.toDateString().split(" ").slice(1).join(" ");
// const url = `/posts/${post.slug}`;
//TODO: this component should be called "card" or something like that. It is not specific to posts.
---

<div
  class="flex flex-col sm:flex-row md:space-x-14 md:mb-20 sm:mb-14 gap-4 sm:justify-center md:mx-24 mb-4"
>
  {
    image && (
      <div class="flex aspect-square md:h-[360px] h-[360px] fade-image">
        <a href={url}>
          <Image
            src={image.src}
            alt={image.alt}
            inferSize
            width={1280}
            height={720}
            loading="lazy"
            class="h-full object-cover object-center post-image"
            style={`background-position: ${image.positionx} ${image.positiony};`}
          />
        </a>
      </div>
    )
  }

  <div
    id="description "
    class="sm:w-2/3 flex flex-col justify-start sm:space-y-4 space-y-2 mb-6 md:mt-10"
  >
    <ul class="flex-row">
      <a href={url}>
        <h2
          class="font-overpass-mono font-bold text-xl lg:text-2xl xl:text-4xl capitalize"
        >
          {title}
        </h2>
      </a>
      <p class="font-inconsolata text-sm">Published on {publishedDate}</p>
    </ul>
    {
      description ? (
        <a href={url}>
          <p class="font-inconsolata normal-case line-clamp-3 sm:text-base text-sm">
            {description}
          </p>
        </a>
      ) : null
    }
    <a
      href={url}
      class="dark:prose-invert max-w-max max-h-max flex flex-row items-center flex-shrink-0 bounce mt-1"
    >
      <span class="mt-2 mb-2">Read on</span>
      <svg
        xmlns="http://www.w3.org/2000/svg"
        class="h-6 w-6 mt-2 mb-2 pt-1"
        fill="none"
        viewBox="0 0 24 24"
        stroke="currentColor"
      >
        <path
          stroke-linecap="round"
          stroke-linejoin="round"
          stroke-width="2"
          d="M9 5l7 7-7 7"></path>
      </svg>
    </a>
    <slot />
  </div>
</div>
<style>
  .post-image {
    background-position: var(--position-x, 45%) var(--position-y, 50%);
  }
  @media (min-width: 800px) {
    .post-image {
      background-position: var(--position-x, 30%) var(--position-y, 50%);
    }
  }
  @keyframes bounce {
    0%,
    20%,
    50%,
    80%,
    100% {
      transform: translateY(0);
    }
    40% {
      transform: translateY(-10px);
    }
    60% {
      transform: translateY(-5px);
    }
  }

  .bounce:hover {
    animation: bounce 1s;
  }
  .fade-image {
    transition: opacity 0.25s ease-in;
    opacity: 1;
  }

  .fade-image:hover {
    opacity: 0.7;
  }
</style>
