---
import BaseLayout from "./BaseLayout.astro";
import "../styles/glightbox.css";
import Prose from "../components/Prose.astro";
import Tag from "../components/TagPill.astro";

import { getImage } from "astro:assets";
import { getEntry, type CollectionEntry } from "astro:content";
import { getEntries } from "astro:content";

type Props = {
  post: CollectionEntry<"posts">;
};

const { post } = Astro.props;
const frontmatter = post.data;
const filmStocks: CollectionEntry<"films">[] = [];

if (frontmatter.filmStocks !== undefined) {
  for (const film of frontmatter.filmStocks) {
    const filmObject = await getEntry({
      collection: "films",
      slug: film.id,
    });
    filmStocks.push(filmObject);
  }
}

const keyWords = filmStocks
  .map((film) => `${film.data.brand} ${film.data.name}`)
  .concat(frontmatter.tags)
  .join(", ");

const authorObject = await getEntry({
  collection: "authors",
  slug: frontmatter.author.slug,
});
let updatedDate = "";
if (frontmatter.updatedDate) {
  updatedDate = frontmatter.updatedDate
    .toDateString()
    .split(" ")
    .slice(1)
    .join(" ");
}
const publishedDate = frontmatter.pubDate
  .toDateString()
  .split(" ")
  .slice(1)
  .join(" ");
const title = frontmatter.title;
const description = frontmatter.description;
const authorFullName = authorObject?.data.name || "none";
const author = authorFullName.split(" ")[0].toLowerCase();
const image = frontmatter.image?.src;
const alt = frontmatter.image?.alt;
const positionx = frontmatter.image?.positionx;
const positiony = frontmatter.image?.positiony;
---

<BaseLayout
  title={title}
  image={image}
  alt={alt}
  description={description}
  author={author}
  pubDate={updatedDate}
  updatedDate={publishedDate}
  keywords={keyWords}
  is404Page={false}
>
  {
    image ? (
      <div
        id="backgroundImageElement"
        class=" before:bg-center-33 before:bg-cover before:bg-no-repeat before:fixed before:will-change-transform flex flex-col justify-center items-center text-center h-screen mb-8 sm:px-16 px-4"
        style={`--background-image: url(${image}); --position-x: ${positionx}; --position-y: ${positiony};`}
        data-pagefind-body
      >
        <h1 class="prose prose-slate uppercase font-overpass-mono text-[rgb(245,245,245)] text-4xl">
          {title}
        </h1>
        <div class="flex flex-wrap justify-center gap-2 mt-2 text-xl">
          {frontmatter.tags.map((tag) => (
            <Tag tag={tag} href={`/tags/${tag}`} class:list="text-xl" />
          ))}
          {filmStocks
            ? filmStocks.map((film) => (
                <Tag
                  tag={film.data.name}
                  href={`/films/${film.id}`}
                  class:list="text-xl bg-slate-400"
                />
              ))
            : null}
        </div>
      </div>
    ) : (
      <div data-pagefind-body class="dark:bg-[rgb(34,33,37)] bg-[#f2f2f2]">
        <Prose>
          <h1 class="normal-case font-overpass-mono text-4xl -mb-1 mt-4">
            {title}
          </h1>
          <div class="flex">
            {frontmatter.tags.map((tag) => (
              <p class="font-overpass-mono text-xl">
                <a
                  class="bg-slate-600 text-[rgb(245,245,245)] bg-opacity-50 px-2 py-1 rounded no-underline"
                  href={`/tags/${tag}`}
                >
                  {tag}
                </a>
              </p>
            ))}
          </div>
        </Prose>
      </div>
    )
  }
  <div
    data-pagefind-body
    class="pt-4 w-full dark:bg-[rgb(34,33,37)] bg-[#f2f2f2]"
  >
    <Prose>
      <slot />
      <div class="flex flex-col sm:flex-row align-center">
        <div class="w-full flex-col sm:w-1/2 text-center sm:text-left">
          <p>
            -- <a
              href={`/authors/${author}`}
              class="no-underline font-inconsolata"
            >
              {authorFullName}</a
            >
          </p>
        </div>
        <div
          class="w-full flex-col sm:w-1/2 text-left sm:text-right mt-[10px] font-inconsolata"
        >
          <div>
            Published: {publishedDate}
          </div>
          <div>
            Updated: {updatedDate}
          </div>
        </div>
      </div>
    </Prose>
  </div>
</BaseLayout>
<style>
  #backgroundImageElement::before {
    content: "";
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    width: 100%;
    height: 100%;

    background-image: var(--background-image);
    background-position: center;
    background-size: cover;
    -o-background-size: cover;
    -moz-background-size: cover;
    -webkit-background-size: cover;
    filter: brightness(0.8); /* Apply your filter here */
    z-index: -1;

    overflow: auto;
    -webkit-overflow-scrolling: touch;
  }
</style>
